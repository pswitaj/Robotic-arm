#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>

// called this way, it uses the default address 0x40
Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();
// you can also call it with a different address you want
//Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver(0x41);

// Depending on your servo make, the pulse width min and max may vary, you 
// want these to be as small/large as possible without hitting the hard stop
// for max range. You'll have to tweak them as necessary to match the servos you
// have!
// Watch video V1 to understand the two lines below: http://youtu.be/y8X9X10Tn1k
#define SERVOMIN  125 // this is the 'minimum' pulse length count (out of 4096)
#define SERVOMAX  575 // this is the 'maximum' pulse length count (out of 4096)

// our servo # counter
uint8_t servonum = 0;
int pos = 0;
int spd = ;

void setup() {
  Serial.begin(9600);
  Serial.println("16 channel Servo test!");

  pwm.begin();
  
  pwm.setPWMFreq(50);  // Analog servos run at ~60 Hz updates

  //yield();
}

// the code inside loop() has been updated by Robojax
void loop() {
  for (pos = 71; pos <= 130; pos += spd) { 
    pwm.setPWM(0, 0, angleToPulse(pos) );
    delay(50);
  }
  //70 middle
  for (pos = 61; pos <= 80; pos += spd) { 
    pwm.setPWM(1, 0, angleToPulse(pos) );
    delay(50);
  }
  //70 vertical
  for (pos = 61; pos <= 80; pos += spd) { 
    pwm.setPWM(2, 0, angleToPulse(pos) );
    delay(50);
  }
  //70horizontal
  for (pos = 71; pos <= 80; pos += spd) { 
    pwm.setPWM(3, 0, angleToPulse(pos) );
    delay(50);
  }
   //75 vertical
  for (pos = 51; pos <= 110; pos += spd) { 
    pwm.setPWM(4, 0, angleToPulse(pos) );
    delay(50);
  }
  //100 close
  for (pos = 71; pos <= 130; pos += spd) { 
    pwm.setPWM(5, 0, angleToPulse(pos) );
    delay(50);
  }
  
  delay(2000);
  
  for (pos = 129; pos >= 70; pos -= spd) { 
    pwm.setPWM(0, 0, angleToPulse(pos) );
    delay(50);
  }
  
  for (pos = 79; pos >= 60; pos -= spd) { 
    pwm.setPWM(1, 0, angleToPulse(pos) );
    delay(50);
  }
  for (pos = 79; pos >= 60; pos -= spd) { 
    pwm.setPWM(2, 0, angleToPulse(pos) );
    delay(50);
  }
  for (pos = 79; pos >= 60; pos -= spd) { 
    pwm.setPWM(3, 0, angleToPulse(pos) );
    delay(50);
  }
  for (pos = 109; pos >= 50; pos -= spd) { 
    pwm.setPWM(4, 0, angleToPulse(pos) );
    delay(50);
  }
  for (pos = 129; pos >= 70; pos -= spd) { 
    pwm.setPWM(5, 0, angleToPulse(pos) );
    delay(50);
  }
  
// robojax PCA9865 16 channel Servo control
  delay(1000);
 }

int angleToPulse(int ang){
   int pulse = map(ang,0, 180, SERVOMIN,SERVOMAX);// map angle of 0 to 180 to Servo min and Servo max 
   Serial.print("Angle: ");Serial.print(ang);
   Serial.print(" pulse: ");Serial.println(pulse);
   return pulse;
}
